#!/usr/bin/bash
if [ "$1" != '--really' ]; then
  echo "command must be run as: $0 --really"
  exit 1
fi
# procedure requires the store-admin
ADMIN_RUNNING=$(docker inspect --format="{{ .State.Running }}" deis-store-admin)
if [ $? -eq 1 ] || [ "$ADMIN_RUNNING" == "false" ]; then
  echo "deis-store-admin container is required for graceful shutdown"
  exit 2
fi
set -e -x -o pipefail
# determine osd id
CURRENT_STATUS=$(docker exec deis-store-admin ceph health | awk '{print $1}')
OSD_HOSTS=($(etcdctl ls /deis/store/hosts/| awk -F'/' '{print $5}'))
for HOST in "${OSD_HOSTS[@]}"
do
  PUBLIC_IP=$(fleetctl list-machines -fields="machine,ip" -full -no-legend| grep `cat /etc/machine-id` | awk '{print $2}')
  if [ "$HOST" = "$PUBLIC_IP" ] ; then
    OSD_ID=$(etcdctl get /deis/store/osds/$PUBLIC_IP)
    break
  fi
done
# if we own an osd and its healthy, try to gracefully remove it
if [ ! -z "$OSD_ID" ] && [[ "$CURRENT_STATUS" == *"HEALTH_OK"* ]] && [ ${#OSD_HOSTS[@]} -gt "3" ]; then
  docker exec deis-store-admin ceph osd out $OSD_ID
  sleep 30
  TIMEWAITED=0
  until [[ $(docker exec deis-store-admin ceph health) == *"HEALTH_OK"* ]]
  do
    if [ $TIMEWAITED -gt "1200" ]
    then
      echo "ceph graceful removal timeout exceeded"
      break
    fi
    echo "waiting" && sleep 5
    TIMEWAITED=$((TIMEWAITED+5))
  done
  docker stop deis-store-daemon
  docker exec deis-store-admin ceph osd crush remove osd.$OSD_ID
  docker exec deis-store-admin ceph auth del osd.$OSD_ID
  docker exec deis-store-admin ceph osd rm $OSD_ID
  etcdctl rm /deis/store/osds/$PUBLIC_IP
  etcdctl rm /deis/store/hosts/$PUBLIC_IP && sleep 10
  # remove ceph mon
  docker stop deis-store-monitor || true
  docker exec deis-store-admin ceph mon remove `hostname -f` # fixme
  docker stop deis-store-metadata || true
fi

# removing the node from etcd
NODE=$(etcdctl member list | grep `cat /etc/machine-id` | cut -d ':' -f 1)
etcdctl member remove $NODE
